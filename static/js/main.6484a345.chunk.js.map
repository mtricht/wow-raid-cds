{"version":3,"sources":["RaidSetup.js","CooldownList.js","App.js","reportWebVitals.js","index.js"],"names":["RaidSetup","players","setPlayers","useState","newPlayerName","setNewPlayerName","newPlayerClass","setNewPlayerClass","className","placeholder","type","value","onChange","event","target","style","width","Object","keys","classes","sort","map","classKey","name","onClick","newPlayers","push","class","player","index","color","id","filter","href","rel","CooldownList","assignments","setAssignments","encounter","row","addCooldown","spellId","newAssignments","JSON","parse","stringify","undefined","it","length","cursor","data-wowhead","marginLeft","cooldowns","cooldown","secondsToHHMM","seconds","Date","toISOString","substr","getEncounterRows","abilities","flatMap","ability","timers","abilityTime","time","a","b","App","useEffect","window","$WowheadPower","refreshLinks","setEncounter","selectedRow","setSelectedRow","show","setShow","useRef","changeEncounter","bosses","boss","assignment","assignmentIndex","splice","removeAssignment","Button","variant","ertNote","abilityText","join","navigator","clipboard","writeText","generateERT","setTimeout","ref","Overlay","current","placement","props","Tooltip","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"w/DA6DeA,MA1Df,YAA6C,IAAxBC,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,WAAc,EACAC,mBAAS,IADT,mBACnCC,EADmC,KACpBC,EADoB,OAEEF,mBAAS,IAFX,mBAEnCG,EAFmC,KAEnBC,EAFmB,KAmB1C,OACE,sBAAKC,UAAU,QAAf,UACE,uBAAMA,UAAU,cAAhB,UACE,uBAAOC,YAAY,gBAAgBC,KAAK,OAAOF,UAAU,4BACvDG,MAAOP,EAAeQ,SAAU,SAAAC,GAAK,OAAIR,EAAiBQ,EAAMC,OAAOH,QACvEI,MAAO,CAAEC,MAAO,WAClB,sBAAKR,UAAU,2BAAf,UACE,yBAAQA,UAAU,eAAeG,MAAOL,EAAgBM,SAAU,SAAAC,GAAK,OAAIN,EAAkBM,EAAMC,OAAOH,QAA1G,UACE,wBAAQA,MAAM,GAAd,4BACCM,OAAOC,KAAKC,GAASC,OAAOC,KAAI,SAAAC,GAAQ,OACvC,wBAAuBX,MAAOW,EAA9B,SAAyCH,EAAQG,GAAUC,MAA9CD,SAGjB,qBAAKd,UAAU,qBAAf,SACE,qBAAKA,UAAU,mBAAf,SAAkC,mBAAGA,UAAU,cAAcgB,QA9BrD,WAChB,GAAsB,KAAlBpB,GAA2C,KAAnBE,EAA5B,CAGA,IAAMmB,EAAU,YAAOxB,GACvBwB,EAAWC,KAAK,CACdH,KAAMnB,EACNuB,MAAOrB,IAETJ,EAAWuB,GACXpB,EAAiB,IACjBE,EAAkB,kBAuBhB,wBAAOC,UAAU,iCAAjB,UACE,gCACE,+BACE,sCACA,8CACA,4BAGJ,gCACGP,EAAQoB,KAAI,SAACO,EAAQC,GAAT,OAAmB,+BAC9B,oBAAId,MAAO,CAAEe,MAAO,IAAMX,EAAQS,EAAOD,OAAOG,OAAhD,SAA0DF,EAAOL,OACjE,oBAAIR,MAAO,CAAEe,MAAO,IAAMX,EAAQS,EAAOD,OAAOG,OAAhD,SAA0DX,EAAQS,EAAOD,OAAOJ,OAChF,6BAAI,mBAAGf,UAAU,eAAeuB,GAAG,QAAQP,QAAS,kBAjCxCD,EAiC2DK,EAAOL,UAhCtFrB,EAAWD,EAAQ+B,QAAO,SAAAJ,GAAM,OAAIA,EAAOL,OAASA,MADjC,IAACA,SA8B2BK,EAAOL,cAOpD,oCAAM,mBAAGU,KAAK,sBAAsBnB,OAAO,SAASoB,IAAI,aAAlD,qBAAN,MAAmF,oBAAGD,KAAK,0CAA0CnB,OAAO,SAASoB,IAAI,aAAtE,qBAA2F,mBAAG1B,UAAU,4B,wCCIlL2B,MAzDf,YAAiF,IAAzDlC,EAAwD,EAAxDA,QAASmC,EAA+C,EAA/CA,YAAaC,EAAkC,EAAlCA,eAAgBC,EAAkB,EAAlBA,UAAWC,EAAO,EAAPA,IACjEC,EAAc,SAACZ,EAAQa,GAC3B,IAAMC,EAAiBC,KAAKC,MAAMD,KAAKE,UAAUT,IAIjD,QAHkCU,IAA9BJ,EAAeJ,IAA0D,OAA9BI,EAAeJ,KAC5DI,EAAeJ,GAAa,SAESQ,IAAnCJ,EAAeJ,GAAWC,IAAyD,OAAnCG,EAAeJ,GAAWC,GAC5EG,EAAeJ,GAAWC,GAAO,QAC5B,GAAIG,EAAeJ,GAAWC,GAAKP,QAAO,SAAAe,GAAE,OAAIA,EAAGnB,SAAWA,GAAUmB,EAAGN,UAAYA,KAASO,OAAS,EAC9G,OAEFN,EAAeJ,GAAWC,GAAKb,KAAK,CAAEE,SAAQa,YAC9CJ,EAAeK,IAEjB,OACE,mCACE,uBAAOlC,UAAU,iCAAiCuB,GAAG,gBAArD,SACE,kCACE,qBAAIhB,MAAO,CAAEkC,OAAQ,WAAazB,QAAS,kBAAMgB,EAAY,GAAI,OAAjE,UACE,6BACE,mBAAGU,eAAa,aAAajB,KAAK,IAAIlB,MAAO,CAAEoC,WAAY,QAA3D,2BAIF,6BACE,mBAAG3C,UAAU,qBAGjB,qBAAIO,MAAO,CAAEkC,OAAQ,WAAazB,QAAS,kBAAMgB,EAAY,GAAI,QAAjE,UACE,6BACE,mBAAGU,eAAa,cAAcjB,KAAK,IAAIlB,MAAO,CAAEoC,WAAY,QAA5D,8BAIF,6BACE,mBAAG3C,UAAU,qBAGhBP,EAAQoB,KAAI,SAAAO,GAAM,OAAIwB,EAAUpB,QAAO,SAAAqB,GAAQ,OAAIA,EAAS1B,QAAUC,EAAOD,SAAON,KAAI,SAAAgC,GAAQ,OAC/F,qBAAoCtC,MAAO,CAAEkC,OAAQ,WACnDzB,QAAS,kBAAMgB,EAAYZ,EAAOL,KAAM8B,EAAStB,KADnD,UAEE,6BACE,oBAAGmB,eAAA,gBAAuBG,EAAStB,IAAME,KAAK,IAC5ClB,MAAO,CAAEe,MAAO,IAAMX,EAAQS,EAAOD,OAAOG,MAAOqB,WAAY,QADjE,UAEGvB,EAAOL,KAFV,MAEmB8B,EAAS9B,UAG9B,6BACE,mBAAGf,UAAU,oBATRoB,EAAOL,KAAO8B,EAAStB,kBClCtCuB,EAAgB,SAAAC,GAAO,OAAI,IAAIC,KAAe,IAAVD,GAAgBE,cAAcC,OAAO,GAAI,IAkB7EC,EAAmB,SAAAC,GACvB,OAAOA,EAAUC,SAAQ,SAAAC,GAAO,OAAIA,EAAQC,OAAO1C,KAAI,SAAC2C,EAAanC,GAAd,MAAyB,CAC9EE,GAAI+B,EAAQ/B,GACZkC,KAAMD,EACNzC,KAAK,GAAD,OAAKuC,EAAQvC,KAAb,YAAqBM,EAAQ,GACjCC,MAAOgC,EAAQhC,aAEhBV,MAAK,SAAC8C,EAAGC,GAAJ,OAAUD,EAAED,KAAOE,EAAEF,SAiFdG,MA9Ef,WACEC,qBAAU,kBAAMC,OAAOC,cAAcC,kBADxB,MAEiBrE,mBAAS,IAF1B,mBAENF,EAFM,KAEGC,EAFH,OAGqBC,mBAAS,IAH9B,mBAGNmC,EAHM,KAGKmC,EAHL,OAIyBtE,mBAAS,IAJlC,mBAINiC,EAJM,KAIOC,EAJP,OAKyBlC,mBAAS,GALlC,mBAKNuE,EALM,KAKOC,EALP,OAMWxE,oBAAS,GANpB,mBAMNyE,EANM,KAMAC,EANA,KAOP/D,EAASgE,iBAAO,MAetB,OACE,qBAAKtE,UAAU,YAAf,SACA,sBAAKA,UAAU,MAAf,UACE,cAAC,EAAD,CAAWP,QAASA,EAASC,WAAYA,IACzC,sBAAKM,UAAU,QAAf,UACE,yBAAQG,MAAO2B,EAAW9B,UAAU,4BAA4BO,MAAO,CAACC,MAAO,SAC7EJ,SAAU,SAAAC,GAAK,OAVC,SAAAyB,GACtBmC,EAAanC,GACbqC,EAAe,GAQUI,CAAgBlE,EAAMC,OAAOH,QADlD,UAEE,wBAAQA,MAAM,GAAd,8BACCM,OAAOC,KAAK8D,GAAQ3D,KAAI,SAAA4D,GAAI,OAAI,wBAAmBtE,MAAOsE,EAA1B,SAAiCD,EAAOC,GAAM1D,MAAjC0D,SAEjC,KAAd3C,GAAoB,qCACrB,wBAAO9B,UAAU,iCAAiCuB,GAAG,cAArD,UACE,gCACE,+BACE,sCACA,yCACA,oBAAIf,MAAM,MAAV,gCAGJ,gCACG2C,EAAiBqB,EAAO1C,GAAWsB,WAAWvC,KAAI,SAACyC,EAASjC,GAAV,OAAoB,qBACrErB,UAAWqB,IAAU6C,EAAc,aAAe,GAClDlD,QAAS,kBAAMmD,EAAe9C,IAC9Bd,MAAO,CAACkC,OAAQ,WAHqD,UAIrE,6BAAKK,EAAcQ,EAAQG,QAC3B,6BAAI,mBAAGhC,KAAK,IAAIiB,eAAA,gBAAuBY,EAAQ/B,IAA3C,SAAkD+B,EAAQvC,SAC9D,6BACGa,EAAYE,IAAcF,EAAYE,GAAWT,IAChDO,EAAYE,GAAWT,GAAOR,KAAI,SAAC6D,EAAYC,GAAb,OAAiC,gCACnE,mBAAGlD,KAAK,IAAIiB,eAAA,gBAAuBgC,EAAWzC,WADqB,OACCyC,EAAWtD,OAA8B,KAAtBsD,EAAWtD,OAAgB,KAAO,GADtD,QA7EjEa,EA+EWyC,EAAWzC,QA/EXW,EAAUpB,QAAO,SAAAe,GAAE,OAAIA,EAAGhB,KAAOU,KAAS,IA+EtBlB,KAFkC,YAG7D,mBAAGf,UAAU,eAAeuB,GAAG,QAAQP,QAAS,kBA7C7C,SAACe,EAAKV,GAC7B,IAAMa,EAAiBC,KAAKC,MAAMD,KAAKE,UAAUT,IACjDM,EAAeJ,GAAWC,GAAK6C,OAAOvD,EAAO,GAC7CQ,EAAeK,GA0C2D2C,CAAiBxD,EAAOsD,QAHPD,EAAWtD,OAASsD,EAAWzC,SA7E1G,IAAAA,SAqEwEqB,EAAQG,KAAOH,EAAQvC,cAiB3G,cAAC+D,EAAA,EAAD,CAAQ9E,UAAU,MAAM+E,QAAQ,UAAU/D,QA9CtB,WACxBqD,GAAQ,GAvCQ,SAACvC,EAAWF,GAC9B,IAAMoD,EAAUlD,EAAUjB,KAAI,SAACyC,EAASjC,GACtC,IAAI4D,EAAW,gBAAYnC,EAAcQ,EAAQG,MAAlC,qBAAoDH,EAAQ/B,GAA5D,gBAAsE+B,EAAQhC,OAA9E,OAAsFgC,EAAQvC,KAA9F,SACf,YAAoBuB,IAAhBV,GAA6C,OAAhBA,QAA+CU,IAAvBV,EAAYP,IAC5C,OAAvBO,EAAYP,IAAiD,IAA9BO,EAAYP,GAAOmB,OAC3CyC,EAETA,GAAe,IAAOrD,EAAYP,GAAOR,KAAI,SAAA6D,GAC3C,MAAM,GAAN,OAAgC,KAAtBA,EAAWtD,OAAgB,WAAasD,EAAWtD,OAA7D,mBAA8EsD,EAAWzC,QAAzF,QACCiD,KAAK,UAGVC,UAAUC,UAAUC,UAAUL,EAAQE,KAAK,OA4BzCI,CAAYnC,EAAiBqB,EAAO1C,GAAWsB,WAAYxB,EAAYE,IACvEyD,YAAW,kBAAMlB,GAAQ,KAAQ,OA2CyCmB,IAAKlF,EAA3E,+BACA,cAACmF,EAAA,EAAD,CAASnF,OAAQA,EAAOoF,QAAStB,KAAMA,EAAMuB,UAAU,QAAvD,SACG,SAACC,GAAD,OACC,cAACC,EAAA,EAAD,2BAAaD,GAAb,2CAON,qBAAK5F,UAAU,QAAf,SACiB,KAAd8B,GAAoB,cAAC,EAAD,CAAcrC,QAASA,EAASmC,YAAaA,EAAaC,eAAgBA,EAC7FC,UAAWA,EAAWC,IAAKmC,YC/FtB4B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.6484a345.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport classes from './data/classes.json';\n\nfunction RaidSetup({ players, setPlayers }) {\n  const [newPlayerName, setNewPlayerName] = useState(\"\");\n  const [newPlayerClass, setNewPlayerClass] = useState(\"\");\n  const addPlayer = () => {\n    if (newPlayerName === \"\" || newPlayerClass === \"\") {\n      return;\n    }\n    const newPlayers = [...players];\n    newPlayers.push({\n      name: newPlayerName,\n      class: newPlayerClass\n    });\n    setPlayers(newPlayers);\n    setNewPlayerName(\"\");\n    setNewPlayerClass(\"\");\n  };\n  const removePlayer = (name) => {\n    setPlayers(players.filter(player => player.name !== name));\n  };\n  return (\n    <div className=\"col-3\">\n      <form className=\"form-inline\">\n        <input placeholder=\"Player's name\" type=\"text\" className=\"form-control mb-2 mr-sm-2\"\n          value={newPlayerName} onChange={event => setNewPlayerName(event.target.value)}\n          style={{ width: \"170px\" }} />\n        <div className=\"input-group mb-2 mr-sm-2\">\n          <select className=\"form-control\" value={newPlayerClass} onChange={event => setNewPlayerClass(event.target.value)}>\n            <option value=\"\">Select a class</option>\n            {Object.keys(classes).sort().map(classKey =>\n              <option key={classKey} value={classKey}>{classes[classKey].name}</option>\n            )}\n          </select>\n          <div className=\"input-group-append\">\n            <div className=\"input-group-text\"><i className=\"fas fa-plus\" onClick={addPlayer} /></div>\n          </div>\n        </div>\n      </form>\n      <table className=\"table table-dark table-striped\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Class (spec)</th>\n            <th></th>\n          </tr>\n        </thead>\n        <tbody>\n          {players.map((player, index) => <tr key={player.name}>\n            <td style={{ color: \"#\" + classes[player.class].color }}>{player.name}</td>\n            <td style={{ color: \"#\" + classes[player.class].color }}>{classes[player.class].name}</td>\n            <td><i className=\"fas fa-trash\" id=\"trash\" onClick={() => removePlayer(player.name)} /></td>\n          </tr>)}\n        </tbody>\n      </table>\n      <p>By <a href=\"https://tricht.dev/\" target=\"_blank\" rel=\"noreferrer\">Michael</a> - <a href=\"https://github.com/mtricht/wow-raid-cds\" target=\"_blank\" rel=\"noreferrer\">View on <i className=\"fab fa-github\"></i></a></p>\n    </div>\n  );\n}\n\nexport default RaidSetup;\n","import classes from \"./data/classes.json\";\nimport cooldowns from \"./data/cooldowns.json\";\n\nfunction CooldownList({ players, assignments, setAssignments, encounter, row }) {\n  const addCooldown = (player, spellId) => {\n    const newAssignments = JSON.parse(JSON.stringify(assignments));\n    if (newAssignments[encounter] === undefined || newAssignments[encounter] === null) {\n      newAssignments[encounter] = [];\n    }\n    if (newAssignments[encounter][row] === undefined || newAssignments[encounter][row] === null) {\n      newAssignments[encounter][row] = [];\n    } else if (newAssignments[encounter][row].filter(it => it.player === player && it.spellId === spellId).length > 0) {\n      return;\n    }\n    newAssignments[encounter][row].push({ player, spellId });\n    setAssignments(newAssignments);\n  }\n  return (\n    <>\n      <table className=\"table table-dark table-striped\" id=\"cooldown-list\">\n        <tbody>\n          <tr style={{ cursor: \"pointer\" }} onClick={() => addCooldown(\"\", 6262)}>\n            <td>\n              <a data-wowhead=\"spell=6262\" href=\"#\" style={{ marginLeft: \"15px\" }}>\n                Healthstone\n                </a>\n            </td>\n            <td>\n              <i className=\"fas fa-plus\" />\n            </td>\n          </tr>\n          <tr style={{ cursor: \"pointer\" }} onClick={() => addCooldown(\"\", 43185)}>\n            <td>\n              <a data-wowhead=\"spell=43185\" href=\"#\" style={{ marginLeft: \"15px\" }}>\n                Healing potion\n                </a>\n            </td>\n            <td>\n              <i className=\"fas fa-plus\" />\n            </td>\n          </tr>\n          {players.map(player => cooldowns.filter(cooldown => cooldown.class === player.class).map(cooldown =>\n            <tr key={player.name + cooldown.id} style={{ cursor: \"pointer\" }}\n              onClick={() => addCooldown(player.name, cooldown.id)}>\n              <td>\n                <a data-wowhead={`spell=${cooldown.id}`} href=\"#\"\n                  style={{ color: \"#\" + classes[player.class].color, marginLeft: \"15px\" }}>\n                  {player.name}'s {cooldown.name}\n                </a>\n              </td>\n              <td>\n                <i className=\"fas fa-plus\" />\n              </td>\n            </tr>))}\n        </tbody>\n      </table>\n    </>\n  );\n}\n\nexport default CooldownList;\n","import React, { useState, useRef, useEffect } from 'react';\nimport './App.css';\nimport RaidSetup from './RaidSetup';\nimport bosses from './data/castle_nathria.json';\nimport cooldowns from './data/cooldowns.json';\nimport {Button, Overlay, Tooltip} from 'react-bootstrap';\nimport CooldownList from './CooldownList';\n\nconst secondsToHHMM = seconds => new Date(seconds * 1000).toISOString().substr(14, 5);\nconst getCooldown = spellId => cooldowns.filter(it => it.id === spellId)[0];\n\nconst generateERT = (encounter, assignments) => {\n  const ertNote = encounter.map((ability, index) => {\n    let abilityText = `{time:${secondsToHHMM(ability.time)}}: {spell:${ability.id}}|cff${ability.color}${ability.name}|r - `;\n    if (assignments === undefined || assignments === null || assignments[index] === undefined || \n      assignments[index] === null || assignments[index].length === 0) {\n      return abilityText;\n    }\n    abilityText += \" \" + (assignments[index].map(assignment => {\n      return `${assignment.player === \"\" ? \"Everyone\" : assignment.player} {spell:${assignment.spellId}}`;\n    }).join(\" + \"));\n    return abilityText;\n  });\n  navigator.clipboard.writeText(ertNote.join(\"\\n\"));\n};\n\nconst getEncounterRows = abilities => {\n  return abilities.flatMap(ability => ability.timers.map((abilityTime, index) => ({\n    id: ability.id,\n    time: abilityTime,\n    name: `${ability.name} ${index + 1}`,\n    color: ability.color\n  })))\n  .sort((a, b) => a.time - b.time);\n};\n\nfunction App() {\n  useEffect(() => window.$WowheadPower.refreshLinks());\n  const [players, setPlayers] = useState([]);\n  const [encounter, setEncounter] = useState(\"\");\n  const [assignments, setAssignments] = useState({});\n  const [selectedRow, setSelectedRow] = useState(0);\n  const [show, setShow] = useState(false);\n  const target = useRef(null);\n  const removeAssignment = (row, index) => {\n    const newAssignments = JSON.parse(JSON.stringify(assignments));\n    newAssignments[encounter][row].splice(index, 1);\n    setAssignments(newAssignments);\n  };\n  const handleGenerateERT = () => {\n    setShow(true);\n    generateERT(getEncounterRows(bosses[encounter].abilities), assignments[encounter]);\n    setTimeout(() => setShow(false), 2500);\n  };\n  const changeEncounter = encounter => {\n    setEncounter(encounter);\n    setSelectedRow(0);\n  };\n  return (\n    <div className=\"container\">\n    <div className=\"row\">\n      <RaidSetup players={players} setPlayers={setPlayers} />\n      <div className=\"col-6\">\n        <select value={encounter} className=\"form-control mb-2 mr-sm-2\" style={{width: \"300px\"}}\n          onChange={event => changeEncounter(event.target.value)}>\n          <option value=\"\">Select encounter</option>\n          {Object.keys(bosses).map(boss => <option key={boss} value={boss}>{bosses[boss].name}</option>)}\n        </select>\n        {encounter !== \"\" && <>\n        <table className=\"table table-dark table-striped\" id=\"assignments\">\n          <thead>\n            <tr>\n              <th>Time</th>\n              <th>Ability</th>\n              <th width=\"70%\">Assignment(s)</th>\n            </tr>\n          </thead>\n          <tbody>\n            {getEncounterRows(bosses[encounter].abilities).map((ability, index) => <tr key={ability.time + ability.name}\n              className={index === selectedRow ? \"table-info\" : \"\"}\n              onClick={() => setSelectedRow(index)}\n              style={{cursor: \"pointer\"}}>\n              <td>{secondsToHHMM(ability.time)}</td>\n              <td><a href=\"#\" data-wowhead={`spell=${ability.id}`}>{ability.name}</a></td>\n              <td>\n                {assignments[encounter] && assignments[encounter][index] &&\n                  assignments[encounter][index].map((assignment, assignmentIndex) => <div key={assignment.player + assignment.spellId}>\n                  <a href=\"#\" data-wowhead={`spell=${assignment.spellId}`}></a>&nbsp;{assignment.player}{assignment.player !== \"\" ? \"'s\" : \"\"}&nbsp;\n                  {getCooldown(assignment.spellId).name}&nbsp;\n                  &nbsp;<i className=\"fas fa-times\" id=\"trash\" onClick={() => removeAssignment(index, assignmentIndex)} />\n                </div>)}\n              </td>\n            </tr>)}\n          </tbody>\n        </table>\n        <Button className=\"m-2\" variant=\"success\" onClick={handleGenerateERT} ref={target}>Generate ERT note</Button>\n        <Overlay target={target.current} show={show} placement=\"right\">\n          {(props) => (\n            <Tooltip {...props}>\n              Copied ERT note\n            </Tooltip>\n          )}\n        </Overlay>\n      </>}\n      </div>\n      <div className=\"col-3\">\n        {encounter !== \"\" && <CooldownList players={players} assignments={assignments} setAssignments={setAssignments}\n          encounter={encounter} row={selectedRow} />}\n      </div>\n    </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}